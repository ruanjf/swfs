<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    
	<!-- 使用依赖控制器类名字的惯例，将URI映射到控制器 (例：TestController -> /test)
	<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/> -->
	
	<!-- 默认的注解映射的支持  -->
    <mvc:annotation-driven />
    
	<!-- 指定静态资源的位置 -->
    <mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources location="/js/" mapping="/js/**"/>
    <mvc:resources location="/img/" mapping="/img/**"/>
	
	<!-- 对指定包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:annotation-config />
	<context:component-scan base-package="com.ruanjf.springMVC.persistent" />  
	<context:component-scan base-package="com.ruanjf.springMVC.dao" />  
	<context:component-scan base-package="com.ruanjf.springMVC.services" />
	<context:component-scan base-package="com.ruanjf.springMVC.web.controller" />
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 加入特定的转换器 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" lazy-init="false">
		<property name="messageConverters">  
  			<list>
   				<ref bean="mappingJacksonHttpMessageConverter" />
   				<ref bean="utf8StringHttpMessageConverter" />
  			</list>
		</property>
	</bean>
	
	<!-- json转换器 -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
  
    <!-- 字符串转换器 -->
  	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" />
  	
  	<!-- utf-8字符串转换器，继承与StringHttpMessageConverter -->
  	<bean id="utf8StringHttpMessageConverter" class="com.ruanjf.springMVC.commons.UTF8StringHttpMessageConverter" />
     
	
	<!-- 另外最好还要加入DefaultAnnotationHandlerMapping，不然会被 XML或其它的映射覆盖！
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />-->
	
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 全局异常配置 start -->    
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">    
        <property name="exceptionMappings">    
            <props>    
                <prop key="java.lang.Exception">errors/500</prop>    
                <prop key="java.lang.Throwable">errors/404</prop>  
                <prop key="java.lang.RuntimeException">showError</prop>  
                <prop key="java.sql.SQLException">showDBError</prop>   
            </props>    
        </property>
        <property name="statusCodes">    
            <props>    
                <prop key="errors/500">500</prop>    
                <prop key="errors/404">404</prop>    
            </props>    
        </property>    
        <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->    
        <property name="warnLogCategory" value="WARN" />    
        <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->    
        <property name="defaultErrorView" value="errors/404" />    
        <!-- 默认HTTP状态码 -->    
        <property name="defaultStatusCode" value="404" />    
    </bean>    
    <!-- 全局异常配置 end -->  
	
</beans>